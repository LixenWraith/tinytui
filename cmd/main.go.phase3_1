// main.go
package main

import (
	"log"
	"os"

	"github.com/LixenWraith/tinytui"
	"github.com/LixenWraith/tinytui/widgets"
)

func main() {
	// --- Basic Logging Setup ---
	logFile, err := os.OpenFile("debug.log", os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644)
	if err != nil {
		panic(err)
	}
	defer logFile.Close()
	log.SetOutput(logFile)
	log.Println("--- Application Starting ---")

	// --- Create Application ---
	app := tinytui.NewApplication()

	// --- Create Widgets ---

	// 1. A simple non-wrapping title
	titleText := widgets.NewText("TinyTUI Text Widget Demo").
		SetStyle(tinytui.DefaultStyle.Foreground(tinytui.ColorAqua).Bold(true))
	// SetWrap(false) is the default, so no need to call it explicitly

	// 2. A text widget with wrapping enabled
	longContent := "This is a longer piece of text designed to demonstrate the word wrapping feature. As you resize the window horizontally, this text should automatically reflow to fit within the available width of its container. Explicit newlines\nlike this one are also respected.\n\nVery long words like Supercalifragilisticexpialidocious might be broken if they exceed the line width."
	wrappingText := widgets.NewText(longContent).
		SetWrap(true). // Enable wrapping
		SetStyle(tinytui.DefaultStyle.Foreground(tinytui.ColorSilver))

	// 3. Another non-wrapping text, maybe like a status line
	statusText := widgets.NewText("Status: OK | Press Ctrl+C to exit").
		SetStyle(tinytui.DefaultStyle.Foreground(tinytui.ColorYellow).Background(tinytui.ColorDarkBlue))

	// --- Create Layout ---
	// Vertical layout: title (fixed height 1), wrapping text (prop 1), status (fixed height 1)
	layout := tinytui.NewFlexLayout(tinytui.Vertical).
		AddChild(titleText, 1, 0).    // Fixed height 1
		AddChild(wrappingText, 0, 1). // Proportional height 1
		AddChild(statusText, 1, 0)    // Fixed height 1

	// --- Set Root and Run ---
	app.SetRoot(layout, true) // Set layout as root, fullscreen

	log.Println("Starting TUI...")
	if err := app.Run(); err != nil {
		log.Fatalf("Error running application: %v", err)
	}

	log.Println("--- Application Stopped ---")
}